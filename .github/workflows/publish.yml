name: publish

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.x

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
            node-version: 18.x
            cache: 'pnpm'
            registry-url: https://registry.npmjs.org/

      - run: corepack enable

      - name: Install NPM Dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm test

  create-image-nest:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_CD_CI }}

      - name: Build image
        run: |
            docker build . --tag ghcr.io/leifermendez/nestjs-curso:latest
            docker push ghcr.io/leifermendez/nestjs-curso:latest

  deploy:
    needs: create-image-nest
    runs-on: ubuntu-latest
    steps:
      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: SSH into Server
        run: |
          sshpass -p ${{secrets.AUTH_PASS}} ssh -o StrictHostKeyChecking=no ${{secrets.AUTH_SERVER}} << EOF
            echo "Starting SSH script"
            echo "Checking if container exists..."
            if docker inspect nestjs_api &> /dev/null; then
              echo "Container nestjs_api exists, stopping and removing..."
              docker stop nestjs_api
              docker rm nestjs_api
            else
              echo "Container nestjs_api does not exist."
            fi
        
            echo "Logging into Docker registry..."
            docker login ghcr.io -u leifermendez -p ${{secrets.TOKEN_CD_CI}}
            echo "Pulling the latest Docker image..."
            docker pull ghcr.io/leifermendez/nestjs-curso:latest
            echo "Running the Docker container..."
            docker run -d \
              --name nestjs_api \
              -p 3000:3000 \
              --restart always \
              -e MAIL_SMTP='${{secrets.ENV_MAIL_SMTP}}' \
              -e JWT_SECRET='${{secrets.ENV_JWT_SECRET}}' \
              -e DB_URI='${{secrets.ENV_DB_URI}}' \
              ghcr.io/leifermendez/nestjs-curso:latest
            echo "done..."
          EOF